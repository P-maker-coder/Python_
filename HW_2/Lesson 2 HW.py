# 1. Создать список и заполнить его элементами различных типов данных.
# Реализовать скрипт проверки типа данных каждого элемента. Использовать функцию type() для проверки типа.
# Элементы списка можно не запрашивать у пользователя, а указать явно, в программе.
# li = [5, 234, 'text', None, -30, True, 1.1]
#
# for el in li:
#     print(f'{el} имеет тип:{type(el)}')


# 2. Для списка реализовать обмен значений соседних элементов.
# Значениями обмениваются элементы с индексами 0 и 1, 2 и 3 и т. д.
# При нечётном количестве элементов последний сохранить на своём месте.
# Для заполнения списка элементов нужно использовать функцию input().
# li = input('Введите элементы списка через пробел: ').split()
#
# for i in range(1, len(li), 2):
#     li[i-1], li[i] = li[i], li[i-1]
# print(li)

# ls = input('enter list: ').split()
# ls[: -1:2], ls[1::2] = ls[1::2], ls[:-1:2]
# print(ls)

# 3. Пользователь вводит месяц в виде целого числа от 1 до 12.
# Сообщить, к какому времени года относится месяц (зима, весна, лето, осень).
# Напишите решения через list и dict.

# month = int(input("Введите месяц: "))
#
# seasons_d = {'зима': (12, 1, 2), 'весна': (3, 4, 5), 'лето':(6, 7, 8), 'осень':(9, 10, 11)}
# seasons_l = ['зима', 'весна', 'лето', 'осень']
#
# for el in seasons_d:
#     if month in seasons_d[el] and 0 < month < 13:
#       print(f'{month}-й месяц - это {el}')
#
# else:
#     print("Такого месяца не существует")

# 4. Пользователь вводит строку из нескольких слов, разделённых пробелами.
# Вывести каждое слово с новой строки. Строки нужно пронумеровать.
# Если слово длинное, выводить только первые 10 букв в слове.
# st = input('Введите строку через пробел ').split()
# for i, word in enumerate(st, 1):
#     print(i, word[:10])

# 5. Реализовать структуру «Рейтинг», представляющую собой набор натуральных чисел, который не возрастает.
# У пользователя нужно запрашивать новый элемент рейтинга.
# Если в рейтинге существуют элементы с одинаковыми значениями, то новый элемент с тем же значением должен разместиться после них.
# Подсказка.Например, набор натуральных чисел: 7, 5, 3, 3, 2.
# Пользователь ввёл число 3. Результат: 7, 5, 3, 3, 3, 2.
# Пользователь ввёл число 8. Результат: 8, 7, 5, 3, 3, 2.
# Пользователь ввёл число 1. Результат: 7, 5, 3, 3, 2, 1.
# Набор натуральных чисел можно задать сразу в коде, например, my_list = [7, 5, 3, 3, 2].
# li = [5, 4, 3, 2, 1]
# num = int(input('Введите число: '))
# i = 0
# for el in li:
#     if num <= el:
#         i +=1
# li.insert(i, num)
# print(li)
#
# list = [5, 4, 3, 2, 1]
# a = int(input('Введите новый элемент: '))
# list.insert(min([len(list)] + [i for i, v in enumerate(list) if v < a]), a)
# print(list)

# 6. * Реализовать структуру данных «Товары». Она должна представлять собой список кортежей. Каждый
 # кортеж хранит информацию об отдельном товаре. В кортеже должно быть два элемента — номер товара и
 # словарь с параметрами (характеристиками товара: название, цена, количество, единица измерения).
 # Структуру нужно сформировать программно, т.е. запрашивать все данные у пользователя.
#
# Пример готовой структуры:
# [
# (1, {“название”: “компьютер”, “цена”: 20000, “количество”: 5, “eд”: “шт.”}),
# (2, {“название”: “принтер”, “цена”: 6000, “количество”: 2, “eд”: “шт.”}),
# (3, {“название”: “сканер”, “цена”: 2000, “количество”: 7, “eд”: “шт.”})
# ]
#
# Необходимо собрать аналитику о товарах. Реализовать словарь, в котором каждый ключ — характеристика
# товара, например название, а значение — список значений-характеристик, например список названий товаров.
#
# Пример:
# { # “название”: [“компьютер”, “принтер”, “сканер”],
# “цена”: [20000, 6000, 2000],
# “количество”: [5, 2, 7],


# params = {"название": "", "цена": "", "количество": "", "ед. измерения": ""}
# res = {"название":[],  "цена":[], "количество": [], "ед. измерения":[]}
# cort = []
# i = 0
# while True:
#     if input('Если хотите завершить программу, введите stop ').capitalize()=='Stop':
#         break
#     i += 1
#     params = params.copy()
#     for el in params:
#         m = input(f'введите данные - {el}: ')
#         params [el] = int(m) if el == 'цена' or el == 'количество' else m
#         res[el].append(params [el])
#     cort.append((i, params))
#     print(cort)
# for key, value in res.items():
#     print(f'{key}: {value}')

